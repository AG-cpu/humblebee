


I want to be able to 
a) Search tv shows with ease on whatever device can connect to the file shares
b) Media sources (e.g. boneraper/tv). Each source contains one sqlite database
The database has relative paths to media files inside the directory (scans recursively)
c) Relational database design.
d) Portable and shit (idk)


* One thing to keep in mind (heavily nested into your brain fibers, son)
Since there will be many databases, one for each source, you're going to want to be able to combine 
all those databases into one. 
That means that you can't use auto incrementing keys. They need to be unique across databases.
BUT WHAT IF (I HAD A GIANT BRAIN CUM). There will be ONE master database of excelence.
This master database will hold the keys that have been used... but no.
It will only hold the last id used.
But I don't need a bloody database for that. I just need a file or something.
A fucking variable or some shit.
Man, this is fucked in my brain.
What I need is a damn file holding the last incremented id for EVERY BLOODY THING.

WTF how is this gonna work.
WE WILL SEE 
p
 ..( o o)..
samt afhverju ertu að hugsa allt á ensku gimpið þitt


* Tables

+series
| id                | PK, INTEGER, AUTO_INCREMENT, NOT NULL   |
| title             | VARCHAR, NOT NULL                       |
| summary           | TEXT (the show summary), NULLABLE?      |
| original_air_date | TIMESTAMP                               |
| genre             | VARCHAR  (or not)                       |
| end_date          | TIMESTAMP, nullable in case still going |
| language          | VARCHAR OR SOMETHING                    |

+season
| id            | PK, INTEGER, AUTO_INCREMENT, NOT NULL |
| season_number |                                       |
| start_date    |                                       |
| end_date      |                                       |
| series_id     |                                       |
|               |                                       |



* Table notes
** Maybe genre shouldn't be there. Make a join table with 'tags' tag<->tag-series<-> series (many many baby)

